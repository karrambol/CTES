{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\src\\App.svelte",
    "..\\src\\Solver.svelte",
    "..\\src\\Chart.svelte",
    "..\\src\\ResultSelector.svelte",
    "..\\src\\ThermalDataField.svelte",
    "..\\src\\SolverDataField.svelte",
    "..\\src\\LoadDataField.svelte",
    "..\\src\\CircuitDataField.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { task, resistance, results, plottedResult } from './stores.js'\n  import Solver from './Solver.svelte'\n  import Chart from './Chart.svelte'\n  import ResultSelector from './ResultSelector.svelte'\n  import ThermalDataField from './ThermalDataField.svelte'\n  import CircuitDataField from './CircuitDataField.svelte'\n  import LoadDataField from './LoadDataField.svelte'\n  import SolverDataField from './SolverDataField.svelte'\n</script>\n<style>\n  .container {\n    display: flex;\n    height: 100%;\n    flex-direction: row;\n    padding-right: 20px;\n  }\n  h2 {\n    color: #333;\n    margin-bottom: 15px;\n    margin-left: -10px;\n    margin-right: -10px;\n    padding: 5px;\n    padding-left: 10px;\n    border-bottom: 2px solid #333;\n  }\n  .params-wrapper {\n    background-color: #118073;\n    padding: 10px;\n    padding-bottom: 0;\n    min-width: 350px;\n    width: 350px;\n    display: flex;\n    flex-direction: column;\n    overflow: auto;\n  }\n  table {\n    margin: 20px auto 20px auto;\n    border: 2px solid #555;\n    border-collapse: collapse;\n  }\n  .table-holder {\n    border-top: 2px solid #118073;\n  }\n  th {\n    background-color: #118073;\n    border: 1px solid #333;\n  }\n  td {\n    border: 1px solid #333;\n  }\n  table tr:nth-child(odd) {\n    background-color: #ccc;\n  }\n  table tr:nth-child(even) {\n    background-color: #118073;\n  }\n  .current-head-top {\n    background-color: #0c554c;\n    color: rgb(9, 173, 173);\n  }\n  .current-head {\n    background-color: #0c554c;\n    color: rgb(9, 173, 173);\n  }\n</style>\n\n<div class=\"container\">\n  <div class=\"params-wrapper\">\n    <h2>Исходные данные</h2>\n    <ThermalDataField />\n    <CircuitDataField />\n    <LoadDataField />\n    <SolverDataField />\n    <Solver />\n    <ResultSelector />\n  </div>\n  <Chart />\n</div>\n{#if $results[0] && $results[0].result.length > 0}\n  <div class=\"table-holder\">\n    <table>\n      <tr>\n        <th />\n        {#each $results as { task }, id}\n          <th class:current-head-top={id === $plottedResult} colspan=\"2\">\n            {id + 1}) {task.Rc.value}, {task.Rc.units}, {task.Vwind.value}, {task.Vwind.units}\n          </th>\n        {/each}\n      </tr>\n      <tr>\n        <th>t, с</th>\n        {#each $results as result, id}\n          <th class:current-head={id === $plottedResult}>T{id + 1}, °С</th>\n          <th class:current-head={id === $plottedResult}>E{id + 1}, Вт</th>\n        {/each}\n      </tr>\n      {#each $results[0].result as point, i}\n        <tr>\n          <td>{point[0]}</td>\n          {#each $results as { result }, i2}\n            {#if result && result[i]}\n              <td>{result[i][1]}</td>\n              <td>{result[i][2]}</td>\n            {:else}\n              <td>-</td>\n              <td>-</td>\n            {/if}\n          {/each}\n        </tr>\n      {/each}\n    </table>\n  </div>\n{/if}\n",
    "<script>\r\n  import {\r\n    task,\r\n    resistance,\r\n    thermal,\r\n    results,\r\n    loads,\r\n    solver,\r\n  } from './stores.js'\r\n  import { Solver } from './odex'\r\n  import { convectionObj } from './hConv'\r\n  import createCircuit, { NMSearchVH } from './createCircuit'\r\n  import initClampDE from './createDE'\r\n  import { onMount } from 'svelte'\r\n\r\n  let progresses = [];\r\n  let inProgress = 0;\r\n  let current = 0;\r\n\r\n  function solveWorker(cur, R) {\r\n    if (window.Worker) {\r\n      let work\r\n      if (ENV !== 'development') {\r\n        work = new Worker('./worker.js')\r\n      } else {\r\n        work = new Worker('./public/worker.js')\r\n      }\r\n      $results[cur] = {\r\n        task: {\r\n          ...$task,\r\n          Rc: R,\r\n        },\r\n        result: [],\r\n      }\r\n      let rez = []\r\n      let timeLast = new Date()\r\n      let isDone = false\r\n      progresses.push({\r\n        id: cur,\r\n        progress: 0,\r\n        max: $results[cur].task.tn.value,\r\n      })\r\n      work.onmessage = function fromWW(e) {\r\n        if (!e.data.isDone && !isDone) {\r\n          rez.push(e.data.result)\r\n          let timeNow = new Date()\r\n          if (timeNow - timeLast >= 1000 / 30) {\r\n            $results[cur].result = [...$results[cur].result, ...rez]\r\n            ;[progresses[cur].progress] = rez[rez.length - 1]\r\n            rez = []\r\n            timeLast = new Date()\r\n          }\r\n        } else {\r\n          $results[cur] = e.data.results\r\n          progresses[cur].progress = progresses[cur].max\r\n          isDone = true\r\n          work.terminate()\r\n          inProgress -= 1\r\n          if (inProgress === 0) { localStorage.set}\r\n        }\r\n      }\r\n      inProgress += 1\r\n\r\n      work.postMessage({\r\n        thermal: $thermal,\r\n        resistance: { ...$resistance, Rc: R },\r\n        task: { ...$task, Rc: R },\r\n        loads: $loads.loads,\r\n        solver: $solver,\r\n      })\r\n    } else {\r\n      console.log(\"Your browser doesn't support web workers.\")\r\n    }\r\n  }\r\n  function handleClick() {\r\n    const inpStr = $resistance.Rc.value\r\n    let arrR = inpStr.split(',').map(el => parseFloat(el))\r\n    arrR.forEach(function runWW(el, i) {\r\n      solveWorker(i + current, {\r\n        ...$resistance.Rc,\r\n        value: el,\r\n      })\r\n    })\r\n    current += arrR.length\r\n  }\r\n  onMount(() => {\r\n    function optimize() {\r\n      const start = new Date()\r\n      const rez = NMSearchVH(\r\n        $resistance,\r\n        (itr, x, objF, centr, action, objEvals) => {\r\n          console.log(\r\n            `${itr}. [${x[0]},${x[1]}] err = ${(objF * 100).toFixed(4)} % n = \r\n            ${$task.n.value}, ${objEvals} evals, ${action}`\r\n          )\r\n        }\r\n      )\r\n      const end = new Date()\r\n      console.log(rez, `${end - start}, sec`)\r\n    }\r\n    // setTimeout(() => {optimize()},500);\r\n  })\r\n</script>\r\n\r\n<style>\r\n  button {\r\n    align-self: flex-end;\r\n    margin: auto 20px auto auto;\r\n    float: right;\r\n    border-radius: 5px;\r\n  }\r\n  .solver-container {\r\n    padding: 10px 0px;\r\n  }\r\n  .button-container {\r\n    width: 100%;\r\n    display: flex;\r\n  }\r\n  .progresses-container {\r\n    margin-top: 10px;\r\n    padding: 10px;\r\n    border: 2px solid #085047;\r\n    border-radius: 5px;\r\n  }\r\n</style>\r\n\r\n<div class=\"solver-container\">\r\n  <div class=\"button-container\">\r\n    <button on:click={handleClick}>Рассчитать</button>\r\n  </div>\r\n  <div class:progresses-container={inProgress}>\r\n    {#if inProgress}Запущенные решатели ({inProgress}):{/if}\r\n    {#each progresses as { max, progress, id }, id}\r\n      {#if progress < max}\r\n        <div>\r\n          {id + 1}.\r\n          <progress {max} value={progress}>\r\n            <span class=\"value\">{progress}/{max}</span>\r\n          </progress>\r\n        </div>\r\n      {/if}\r\n    {/each}\r\n  </div>\r\n</div>\r\n",
    "<script>\r\n  import Chart from 'chart.js'\r\n  import { results, result, plottedResult } from './stores.js'\r\n  import { dataConfig, currentConfig } from './chartConfigs.js'\r\n  import { onMount } from 'svelte'\r\n\r\n  let currentCanvas\r\n  let dataCanvas\r\n  let dataChart = {}\r\n  let currentChart = {}\r\n  let current = 0\r\n\r\n  let timeoutIDs = []\r\n  $: current = $results.length - 1\r\n  $: $plottedResult = current\r\n  let request\r\n\r\n  onMount(() => {\r\n    Chart.defaults.global.elements.point.hoverRadius = 10\r\n    let ctx = dataCanvas.getContext('2d')\r\n    dataChart = new Chart(ctx, dataConfig)\r\n    let ctx2 = currentCanvas.getContext('2d')\r\n    currentChart = new Chart(ctx2, currentConfig)\r\n  })\r\n\r\n  $: {\r\n    if ($results[0]) {\r\n      dataChart.data.datasets[0].data = $result.T\r\n      dataChart.data.datasets[1].data = $result.E\r\n      currentChart.data.datasets[0].data = $result.I1\r\n      currentChart.data.datasets[1].data = $result.I2\r\n      request = requestAnimationFrame(() => {\r\n        dataChart.update()\r\n        currentChart.update()\r\n      })\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .charts-wrapper {\r\n    flex: 1;\r\n    width: calc(100% - 350px);\r\n  }\r\n  .dataChart-wrapper {\r\n    height: 80%;\r\n  }\r\n  .currentChart-wrapper {\r\n    height: 20%;\r\n  }\r\n</style>\r\n\r\n<div class=\"charts-wrapper\">\r\n  <div class=\"dataChart-wrapper\">\r\n    <canvas id=\"dataChart\" bind:this={dataCanvas} />\r\n  </div>\r\n  <div class=\"currentChart-wrapper\">\r\n    <canvas id=\"currentChart\" bind:this={currentCanvas} />\r\n  </div>\r\n</div>\r\n",
    "<script>\r\n  import { results, plottedResult, selectedResults } from './stores.js'\r\n\r\n  let current = 0\r\n\r\n  function itemDecompose(item) {\r\n    return `${item.name}=${item.value} ${item.units}`\r\n  }\r\n  function taskDecompose(t) {\r\n    return [\r\n      itemDecompose(t.Rc),\r\n      itemDecompose(t.Vwind),\r\n      itemDecompose(t.tn),\r\n      itemDecompose(t.Tair),\r\n    ].join(', ')\r\n  }\r\n</script>\r\n\r\n<style>\r\n  p {\r\n    margin: 0 0 0.3em 0;\r\n  }\r\n  select {\r\n    width: 100%;\r\n    border-radius: 5px;\r\n    flex-shrink: 0;\r\n  }\r\n</style>\r\n\r\n<p>Выбрать график результата:</p>\r\n<select bind:value={$plottedResult}>\r\n  {#each $results as { task }, i}\r\n    <option value={i}>{i + 1}. {taskDecompose(task)}</option>\r\n  {:else}\r\n    <option disabled selected>нет результатов</option>\r\n  {/each}\r\n</select>\r\n\r\n",
    "<script>\r\n  import { thermal } from './stores.js'\r\n\r\n  let expanded = false\r\n  function toggleExpanded() {\r\n    expanded = !expanded\r\n  }\r\n  const multiNumberRegExp = '(([0-9]*[.]?[0-9]+)[ ]?[,]?[ ]?)+'\r\n  const singleNumberRegExp = '[0-9]*[.]?[0-9]+'\r\n</script>\r\n\r\n<style>\r\n  input {\r\n    width: 220px;\r\n    border-radius: 5px;\r\n  }\r\n\r\n  input:invalid {\r\n    outline: #a31818 solid 3px;\r\n  }\r\n  p {\r\n    margin: 0 0 0.3em 0;\r\n    margin-left: 0;\r\n  }\r\n  .pad {\r\n    color: #eee;\r\n    width: auto;\r\n    height: 25px;\r\n    /* margin: 10px; */\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n    margin-left: 0;\r\n    margin-right: 0;\r\n    border-radius: 5px;\r\n    background-color: #085047;\r\n    border-bottom-left-radius: 0;\r\n    border-bottom-right-radius: 0;\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  .pad p {\r\n    margin: 0;\r\n  }\r\n  .pad:hover {\r\n    cursor: pointer;\r\n  }\r\n  .name-holder {\r\n    display: inline-block;\r\n    text-align: center;\r\n    font-style: italic;\r\n    font-weight: bold;\r\n    margin-right: 5px;\r\n    width: 30px;\r\n    text-align: right;\r\n  }\r\n  .CirquitDataField-container {\r\n    padding: 10px 0px;\r\n  }\r\n\r\n  .params-container {\r\n    /* margin-top: 10px; */\r\n    padding: 10px;\r\n    border: 2px solid #085047;\r\n    border-top: none;\r\n    border-radius: 5px;\r\n    border-top-left-radius: 0;\r\n    border-top-right-radius: 0;\r\n  }\r\n</style>\r\n\r\n<div class=\"CirquitDataField-container\">\r\n  <div class=\"pad\" class:pad-expanded={expanded} on:click={toggleExpanded}>\r\n    <p>{expanded ? '▼' : '⏵'} Тепловые параметры</p>\r\n    <span>{expanded ? 'свернуть' : 'развернуть...'}</span>\r\n  </div>\r\n  <div class=\"params-container\">\r\n    {#each Object.values($thermal).filter(el => el.name === 'Vw' || el.name === 'Tair' || expanded) as { name, value, units, description }}\r\n      <div class=\"param\">\r\n        <p>{description}:</p>\r\n        <div class=\"name-holder\">{name}</div>\r\n        <input type=\"text\" pattern={singleNumberRegExp} bind:value />\r\n        {units}\r\n      </div>\r\n    {/each}\r\n  </div>\r\n</div>\r\n",
    "<script>\r\n  import { solver } from './stores.js'\r\n\r\n  let expanded = false\r\n  function toggleExpanded() {\r\n    expanded = !expanded\r\n  }\r\n\r\n  const multiNumberRegExp = '(([0-9]*[.]?[0-9]+)[ ]?[,]?[ ]?)+'\r\n  const singleNumberRegExp = '[0-9]*[.]?[0-9]+'\r\n  let { values, units, description } = $solver\r\n  $: if (values[values.length - 1].t || values[values.length - 1].step) {\r\n    values.push({ id: values.length, t: '', step: '' })\r\n  }\r\n</script>\r\n\r\n<style>\r\n  input {\r\n    border-radius: 5px;\r\n  }\r\n  .table-input {\r\n    margin: 0;\r\n    border: 0;\r\n    border-radius: 0;\r\n    width: 100%;\r\n  }\r\n  input:invalid {\r\n    outline: #a31818 solid 3px;\r\n  }\r\n  p {\r\n    margin: 0 0 0.3em 0;\r\n    margin-left: 0;\r\n  }\r\n  .pad {\r\n    color: #eee;\r\n    width: auto;\r\n    height: 25px;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n    margin-left: 0;\r\n    margin-right: 0;\r\n    border-radius: 5px;\r\n    background-color: rgb(8, 80, 71);\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  .pad p {\r\n    margin: 0;\r\n  }\r\n  .pad-expanded {\r\n    border-bottom-left-radius: 0;\r\n    border-bottom-right-radius: 0;\r\n  }\r\n  .pad:hover {\r\n    cursor: pointer;\r\n  }\r\n  .DataField-container {\r\n    padding: 10px 0px;\r\n  }\r\n\r\n  .params-container {\r\n    /* margin-top: 10px; */\r\n    padding: 10px;\r\n    border: 2px solid #085047;\r\n    border-top: none;\r\n    border-radius: 5px;\r\n    border-top-left-radius: 0;\r\n    border-top-right-radius: 0;\r\n  }\r\n  table {\r\n    margin: auto;\r\n    margin-left: 0;\r\n    border-collapse: collapse;\r\n    border: 1px solid #085047;\r\n    width: 100%;\r\n  }\r\n  th {\r\n    background-color: #ccc;\r\n    border: 2px solid #000;\r\n    padding: 0;\r\n    font-weight: normal;\r\n  }\r\n  td {\r\n    padding: 0;\r\n    border: 2px outset #555;\r\n  }\r\n  th span {\r\n    font-style: italic;\r\n    font-weight: bold;\r\n  }\r\n  .numder-col {\r\n    width: 20px;\r\n    padding: 5px;\r\n    text-align: center;\r\n    background-color: #ccc;\r\n  }\r\n</style>\r\n\r\n<div class=\"DataField-container\">\r\n  <div class=\"pad\" class:pad-expanded={expanded} on:click={toggleExpanded}>\r\n    <p>{expanded ? '▼' : '⏵'} Настройки решателя</p>\r\n    <span>{expanded ? 'свернуть' : 'развернуть...'}</span>\r\n  </div>\r\n  {#if expanded}\r\n    <div class=\"params-container\">\r\n      <p>{description}:</p>\r\n      <table>\r\n        <tr>\r\n          <th />\r\n          <th>\r\n            <span>t</span>\r\n            , {units[0]}\r\n          </th>\r\n          <th>\r\n            <span>шаг</span>\r\n            , {units[1]}\r\n          </th>\r\n        </tr>\r\n        {#each values as { id, t, step }, id}\r\n          <tr>\r\n            <td class=\"numder-col\">{id + 1}</td>\r\n            <td>\r\n              <input\r\n                class=\"table-input\"\r\n                type=\"text\"\r\n                pattern={singleNumberRegExp}\r\n                bind:value={t} />\r\n            </td>\r\n            <td>\r\n              <input\r\n                class=\"table-input\"\r\n                type=\"text\"\r\n                pattern={singleNumberRegExp}\r\n                bind:value={step} />\r\n            </td>\r\n          </tr>\r\n        {/each}\r\n      </table>\r\n    </div>\r\n  {/if}\r\n</div>\r\n",
    "<script>\r\n  import { loads } from './stores.js'\r\n\r\n  let expanded = false\r\n  function toggleExpanded() {\r\n    expanded = !expanded\r\n  }\r\n\r\n  const singleNumberRegExp = '[0-9]*[.]?[0-9]+'\r\n  $: $loads.loads.forEach(el => {\r\n    if (el.values[el.values.length - 1].i || el.values[el.values.length - 1].t)\r\n      el.values.push({ t: '', i: '' })\r\n  })\r\n</script>\r\n\r\n<style>\r\n  input {\r\n    border-radius: 5px;\r\n  }\r\n  .table-input {\r\n    margin: 0;\r\n    border: 0;\r\n    border-radius: 0;\r\n    width: 100%;\r\n  }\r\n  input:invalid {\r\n    outline: #a31818 solid 3px;\r\n  }\r\n  p {\r\n    margin: 0 0 0.3em 0;\r\n    margin-left: 0;\r\n  }\r\n  .pad {\r\n    color: #eee;\r\n    width: auto;\r\n    height: 25px;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n    margin-left: 0;\r\n    margin-right: 0;\r\n    border-radius: 5px;\r\n    background-color: #085047;\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  .pad p {\r\n    margin: 0;\r\n  }\r\n  .pad-expanded {\r\n    border-bottom-left-radius: 0;\r\n    border-bottom-right-radius: 0;\r\n  }\r\n  .pad:hover {\r\n    cursor: pointer;\r\n  }\r\n  .name-holder {\r\n    display: inline-block;\r\n    text-align: center;\r\n    font-style: italic;\r\n    font-weight: bold;\r\n    margin-right: 5px;\r\n    width: 30px;\r\n    text-align: right;\r\n  }\r\n  .DataField-container {\r\n    padding: 10px 0px;\r\n  }\r\n\r\n  .params-container {\r\n    /* margin-top: 10px; */\r\n    padding: 10px;\r\n    border: 2px solid #085047;\r\n    border-top: none;\r\n    border-radius: 5px;\r\n    border-top-left-radius: 0;\r\n    border-top-right-radius: 0;\r\n  }\r\n  table {\r\n    margin: auto;\r\n    margin-left: 0;\r\n    border-collapse: collapse;\r\n    border: 1px solid #085047;\r\n    width: 100%;\r\n  }\r\n  th {\r\n    background-color: #ccc;\r\n    border: 2px solid #000;\r\n    padding: 0;\r\n    font-weight: normal;\r\n  }\r\n  td {\r\n    padding: 0;\r\n    border: 2px outset #555;\r\n  }\r\n  th span {\r\n    font-style: italic;\r\n    font-weight: bold;\r\n  }\r\n  .numder-col {\r\n    width: 20px;\r\n    padding: 5px;\r\n    text-align: center;\r\n    background-color: #ccc;\r\n  }\r\n</style>\r\n\r\n<div class=\"DataField-container\">\r\n  <div class=\"pad\" class:pad-expanded={expanded} on:click={toggleExpanded}>\r\n    <p>{expanded ? '▼' : '⏵'} Параметры нагрузки</p>\r\n    <span>{expanded ? 'свернуть' : 'развернуть...'}</span>\r\n  </div>\r\n  {#if expanded}\r\n    <div class=\"params-container\">\r\n      {#each $loads.loads as { description, values, name, units, option }, i}\r\n        <p>{description}:</p>\r\n        <label for=\"select\">Зависимость</label>\r\n        <select bind:value={$loads.loads[i].option}>\r\n          {#each $loads.options as { name, description }}\r\n            <option value={name}>{description}</option>\r\n          {/each}\r\n        </select>\r\n        {#if option === 'const'}\r\n          <div class=\"param\">\r\n            <div class=\"name-holder\">{name}</div>\r\n            <input\r\n              type=\"text\"\r\n              pattern={singleNumberRegExp}\r\n              bind:value={values[0].i} />\r\n            {units[1]}\r\n          </div>\r\n        {/if}\r\n        {#if option === 'step' || option === 'linear'}\r\n          <table>\r\n            <tr>\r\n              <th />\r\n              <th>\r\n                <span>t</span>\r\n                , {units[0]}\r\n              </th>\r\n              <th>\r\n                <span>i</span>\r\n                , {units[1]}\r\n              </th>\r\n            </tr>\r\n            {#each values as value, id}\r\n              <tr>\r\n                <td class=\"numder-col\">{id + 1}</td>\r\n                <td>\r\n                  <input\r\n                    class=\"table-input\"\r\n                    type=\"text\"\r\n                    pattern={singleNumberRegExp}\r\n                    bind:value={$loads.loads[i].values[id].t} />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    class=\"table-input\"\r\n                    type=\"text\"\r\n                    pattern={singleNumberRegExp}\r\n                    bind:value={$loads.loads[i].values[id].i} />\r\n                </td>\r\n              </tr>\r\n            {/each}\r\n          </table>\r\n        {/if}\r\n      {/each}\r\n    </div>\r\n  {/if}\r\n</div>\r\n",
    "<script>\r\n  import { resistance } from './stores.js'\r\n\r\n  let expanded = false\r\n  function toggleExpanded() {\r\n    expanded = !expanded\r\n  }\r\n  const multiNumberRegExp = '(([0-9]*[.]?[0-9]+)[ ]?[,]?[ ]?)+'\r\n  const singleNumberRegExp = '[0-9]*[.]?[0-9]+'\r\n</script>\r\n\r\n<style>\r\n  input {\r\n    width: 220px;\r\n    border-radius: 5px;\r\n  }\r\n  input:invalid {\r\n    outline: #a31818 solid 3px;\r\n  }\r\n  p {\r\n    margin: 0 0 0.3em 0;\r\n    margin-left: 0;\r\n  }\r\n  .pad {\r\n    color: #eee;\r\n    width: auto;\r\n    height: 25px;\r\n    /* margin: 10px; */\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n    margin-left: 0;\r\n    margin-right: 0;\r\n    border-radius: 5px;\r\n    background-color: #085047;\r\n    border-bottom-left-radius: 0;\r\n    border-bottom-right-radius: 0;\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  .pad p {\r\n    margin: 0;\r\n  }\r\n  .pad:hover {\r\n    cursor: pointer;\r\n  }\r\n  .name-holder {\r\n    display: inline-block;\r\n    text-align: center;\r\n    font-style: italic;\r\n    font-weight: bold;\r\n    margin-right: 5px;\r\n    width: 30px;\r\n    text-align: right;\r\n  }\r\n  .CirquitDataField-container {\r\n    padding: 10px 0px;\r\n  }\r\n\r\n  .params-container {\r\n    /* margin-top: 10px; */\r\n    padding: 10px;\r\n    border: 2px solid #085047;\r\n    border-top: none;\r\n    border-radius: 5px;\r\n    border-top-left-radius: 0;\r\n    border-top-right-radius: 0;\r\n  }\r\n</style>\r\n\r\n<div class=\"CirquitDataField-container\">\r\n  <div class=\"pad\" class:pad-expanded={expanded} on:click={toggleExpanded}>\r\n    <p>{expanded ? '▼' : '⏵'} Параметры схемы</p>\r\n    <span>{expanded ? 'свернуть' : 'развернуть...'}</span>\r\n  </div>\r\n  <div class=\"params-container\">\r\n    {#each Object.values($resistance).filter(el => el.name === 'Rc' || expanded) as { name, value, units, description }}\r\n      {#if name === 'Rc'}\r\n        <div class=\"param\">\r\n          <p>{description}:</p>\r\n          <div class=\"name-holder\">{name}</div>\r\n          <input type=\"text\" pattern={multiNumberRegExp} bind:value />\r\n          {units}\r\n        </div>\r\n      {:else}\r\n        <div class=\"param\">\r\n          <p>{description}:</p>\r\n          <div class=\"name-holder\">{name}</div>\r\n          <input type=\"text\" pattern={singleNumberRegExp} bind:value />\r\n          {units}\r\n        </div>\r\n      {/if}\r\n    {/each}\r\n  </div>\r\n</div>\r\n"
  ],
  "names": [],
  "mappings": "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"
}