{"version":3,"file":"worker.js","sources":["../src/odex.js","../src/hConv.js","../node_modules/matrix-js/lib/rational.js","../node_modules/matrix-js/lib/merge.js","../node_modules/matrix-js/lib/index.js","../src/circuit.js","../src/createCircuit.js","../src/createDE.js","../src/worker.js"],"sourcesContent":["/* eslint-disable */\r\n'use strict'\r\n/**\r\n * An implementation of ODEX, by E. Hairer and G. Wanner, ported from the Fortran ODEX.F.\r\n * The original work carries the BSD 2-clause license, and so does this.\r\n *\r\n * Copyright (c) 2016 Colin Smith.\r\n * 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following\r\n * disclaimer.\r\n * 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the\r\n * following disclaimer in the documentation and/or other materials provided with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\r\n * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\r\n * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\r\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nObject.defineProperty(exports, '__esModule', { value: true })\r\nvar Outcome\r\n;(function(Outcome) {\r\n  Outcome[(Outcome['Converged'] = 0)] = 'Converged'\r\n  Outcome[(Outcome['MaxStepsExceeded'] = 1)] = 'MaxStepsExceeded'\r\n  Outcome[(Outcome['EarlyReturn'] = 2)] = 'EarlyReturn'\r\n})((Outcome = exports.Outcome || (exports.Outcome = {})))\r\nvar Solver = (function() {\r\n  function Solver(n) {\r\n    this.n = n\r\n    this.uRound = 2.3e-16\r\n    this.maxSteps = 10000\r\n    this.initialStepSize = 1e-4\r\n    this.maxStepSize = 0\r\n    this.maxExtrapolationColumns = 9\r\n    this.stepSizeSequence = 0\r\n    this.stabilityCheckCount = 1\r\n    this.stabilityCheckTableLines = 2\r\n    this.denseOutput = false\r\n    this.denseOutputErrorEstimator = true\r\n    this.denseComponents = undefined\r\n    this.interpolationFormulaDegree = 4\r\n    this.stepSizeReductionFactor = 0.5\r\n    this.stepSizeFac1 = 0.02\r\n    this.stepSizeFac2 = 4.0\r\n    this.stepSizeFac3 = 0.8\r\n    this.stepSizeFac4 = 0.9\r\n    this.stepSafetyFactor1 = 0.65\r\n    this.stepSafetyFactor2 = 0.94\r\n    this.relativeTolerance = 1e-5\r\n    this.absoluteTolerance = 1e-5\r\n    this.debug = false\r\n  }\r\n  Solver.prototype.grid = function(dt, out) {\r\n    if (!this.denseOutput)\r\n      throw new Error('Must set .denseOutput to true when using grid')\r\n    var components = this.denseComponents\r\n    if (!components) {\r\n      components = []\r\n      for (var i = 0; i < this.n; ++i) components.push(i)\r\n    }\r\n    var t\r\n    return function(n, xOld, x, y, interpolate) {\r\n      if (n === 1) {\r\n        var v = out(x, y)\r\n        t = x + dt\r\n        return v\r\n      }\r\n      while (t <= x) {\r\n        var yf = []\r\n        for (\r\n          var _i = 0, components_1 = components;\r\n          _i < components_1.length;\r\n          _i++\r\n        ) {\r\n          var i = components_1[_i]\r\n          yf.push(interpolate(i, t))\r\n        }\r\n        var v = out(t, yf)\r\n        if (v === false) return false\r\n        t += dt\r\n      }\r\n    }\r\n  }\r\n  // Make a 1-based 2D array, with r rows and c columns. The initial values are undefined.\r\n  Solver.dim2 = function(r, c) {\r\n    var a = new Array(r + 1)\r\n    for (var i = 1; i <= r; ++i) a[i] = Solver.dim(c)\r\n    return a\r\n  }\r\n  // Generate step size sequence and return as a 1-based array of length n.\r\n  Solver.stepSizeSequence = function(nSeq, n) {\r\n    var a = new Array(n + 1)\r\n    a[0] = 0\r\n    switch (nSeq) {\r\n      case 1:\r\n        for (var i = 1; i <= n; ++i) a[i] = 2 * i\r\n        break\r\n      case 2:\r\n        a[1] = 2\r\n        for (var i = 2; i <= n; ++i) a[i] = 4 * i - 4\r\n        break\r\n      case 3:\r\n        a[1] = 2\r\n        a[2] = 4\r\n        a[3] = 6\r\n        for (var i = 4; i <= n; ++i) a[i] = 2 * a[i - 2]\r\n        break\r\n      case 4:\r\n        for (var i = 1; i <= n; ++i) a[i] = 4 * i - 2\r\n        break\r\n      case 5:\r\n        for (var i = 1; i <= n; ++i) a[i] = 4 * i\r\n        break\r\n      default:\r\n        throw new Error('invalid stepSizeSequence selected')\r\n    }\r\n    return a\r\n  }\r\n  // Integrate the differential system represented by f, from x to xEnd, with initial data y.\r\n  // solOut, if provided, is called at each integration step.\r\n  Solver.prototype.solve = function(f, x, y0, xEnd, solOut) {\r\n    var _this = this\r\n    // Make a copy of y0, 1-based. We leave the user's parameters alone so that they may be reused if desired.\r\n    var y = [0].concat(y0)\r\n    var dz = Solver.dim(this.n)\r\n    var yh1 = Solver.dim(this.n)\r\n    var yh2 = Solver.dim(this.n)\r\n    if (this.maxSteps <= 0) throw new Error('maxSteps must be positive')\r\n    var km = this.maxExtrapolationColumns\r\n    if (km <= 2) throw new Error('maxExtrapolationColumns must be > 2')\r\n    var nSeq = this.stepSizeSequence || (this.denseOutput ? 4 : 1)\r\n    if (nSeq <= 3 && this.denseOutput)\r\n      throw new Error('stepSizeSequence incompatible with denseOutput')\r\n    if (this.denseOutput && !solOut)\r\n      throw new Error('denseOutput requires a solution observer function')\r\n    if (\r\n      this.interpolationFormulaDegree <= 0 ||\r\n      this.interpolationFormulaDegree >= 7\r\n    )\r\n      throw new Error('bad interpolationFormulaDegree')\r\n    var icom = [0] // icom will be 1-based, so start with a pad entry.\r\n    var nrdens = 0\r\n    if (this.denseOutput) {\r\n      if (this.denseComponents) {\r\n        for (var _i = 0, _a = this.denseComponents; _i < _a.length; _i++) {\r\n          var c = _a[_i]\r\n          // convert dense components requested into one-based indexing.\r\n          if (c < 0 || c > this.n) throw new Error('bad dense component: ' + c)\r\n          icom.push(c + 1)\r\n          ++nrdens\r\n        }\r\n      } else {\r\n        // if user asked for dense output but did not specify any denseComponents,\r\n        // request all of them.\r\n        for (var i = 1; i <= this.n; ++i) {\r\n          icom.push(i)\r\n        }\r\n        nrdens = this.n\r\n      }\r\n    }\r\n    if (this.uRound <= 1e-35 || this.uRound > 1)\r\n      throw new Error('suspicious value of uRound')\r\n    var hMax = Math.abs(this.maxStepSize || xEnd - x)\r\n    var lfSafe = 2 * km * km + km\r\n    function expandToArray(x, n) {\r\n      // If x is an array, return a 1-based copy of it. If x is a number, return a new 1-based array\r\n      // consisting of n copies of the number.\r\n      var tolArray = [0]\r\n      if (Array.isArray(x)) {\r\n        return tolArray.concat(x)\r\n      } else {\r\n        for (var i = 0; i < n; ++i) tolArray.push(x)\r\n        return tolArray\r\n      }\r\n    }\r\n    var aTol = expandToArray(this.absoluteTolerance, this.n)\r\n    var rTol = expandToArray(this.relativeTolerance, this.n)\r\n    var _b = [0, 0, 0, 0],\r\n      nEval = _b[0],\r\n      nStep = _b[1],\r\n      nAccept = _b[2],\r\n      nReject = _b[3]\r\n    // call to core integrator\r\n    var nrd = Math.max(1, nrdens)\r\n    var ncom = Math.max(1, (2 * km + 5) * nrdens)\r\n    var dens = Solver.dim(ncom)\r\n    var fSafe = Solver.dim2(lfSafe, nrd)\r\n    // Wrap f in a function F which hides the one-based indexing from the customers.\r\n    var F = function(x, y, yp) {\r\n      var ret = f(x, y.slice(1))\r\n      for (var i = 0; i < ret.length; ++i) yp[i + 1] = ret[i]\r\n    }\r\n    var odxcor = function() {\r\n      // The following three variables are COMMON/CONTEX/\r\n      var xOldd\r\n      var hhh\r\n      var kmit\r\n      var acceptStep = function(n) {\r\n        // Returns true if we should continue the integration. The only time false\r\n        // is returned is when the user's solution observation function has returned false,\r\n        // indicating that she does not wish to continue the computation.\r\n        xOld = x\r\n        x += h\r\n        if (_this.denseOutput) {\r\n          // kmit = mu of the paper\r\n          kmit = 2 * kc - _this.interpolationFormulaDegree + 1\r\n          for (var i = 1; i <= nrd; ++i) dens[i] = y[icom[i]]\r\n          xOldd = xOld\r\n          hhh = h // note: xOldd and hhh are part of /CONODX/\r\n          for (var i = 1; i <= nrd; ++i) dens[nrd + i] = h * dz[icom[i]]\r\n          var kln = 2 * nrd\r\n          for (var i = 1; i <= nrd; ++i) dens[kln + i] = t[1][icom[i]]\r\n          // compute solution at mid-point\r\n          for (var j = 2; j <= kc; ++j) {\r\n            var dblenj = nj[j]\r\n            for (var l = j; l >= 2; --l) {\r\n              var factor = Math.pow(dblenj / nj[l - 1], 2) - 1\r\n              for (var i = 1; i <= nrd; ++i) {\r\n                ySafe[l - 1][i] =\r\n                  ySafe[l][i] + (ySafe[l][i] - ySafe[l - 1][i]) / factor\r\n              }\r\n            }\r\n          }\r\n          var krn = 4 * nrd\r\n          for (var i = 1; i <= nrd; ++i) dens[krn + i] = ySafe[1][i]\r\n          // compute first derivative at right end\r\n          for (var i = 1; i <= n; ++i) yh1[i] = t[1][i]\r\n          F(x, yh1, yh2)\r\n          krn = 3 * nrd\r\n          for (var i = 1; i <= nrd; ++i) dens[krn + i] = yh2[icom[i]] * h\r\n          // THE LOOP\r\n          for (var kmi = 1; kmi <= kmit; ++kmi) {\r\n            // compute kmi-th derivative at mid-point\r\n            var kbeg = ((kmi + 1) / 2) | 0\r\n            for (var kk = kbeg; kk <= kc; ++kk) {\r\n              var facnj = Math.pow(nj[kk] / 2, kmi - 1)\r\n              iPt = iPoint[kk + 1] - 2 * kk + kmi\r\n              for (var i = 1; i <= nrd; ++i) {\r\n                ySafe[kk][i] = fSafe[iPt][i] * facnj\r\n              }\r\n            }\r\n            for (var j = kbeg + 1; j <= kc; ++j) {\r\n              var dblenj = nj[j]\r\n              for (var l = j; l >= kbeg + 1; --l) {\r\n                var factor = Math.pow(dblenj / nj[l - 1], 2) - 1\r\n                for (var i = 1; i <= nrd; ++i) {\r\n                  ySafe[l - 1][i] =\r\n                    ySafe[l][i] + (ySafe[l][i] - ySafe[l - 1][i]) / factor\r\n                }\r\n              }\r\n            }\r\n            krn = (kmi + 4) * nrd\r\n            for (var i = 1; i <= nrd; ++i) dens[krn + i] = ySafe[kbeg][i] * h\r\n            if (kmi === kmit) continue\r\n            // compute differences\r\n            for (var kk = ((kmi + 2) / 2) | 0; kk <= kc; ++kk) {\r\n              var lbeg = iPoint[kk + 1]\r\n              var lend = iPoint[kk] + kmi + 1\r\n              if (kmi === 1 && nSeq === 4) lend += 2\r\n              var l = void 0\r\n              for (l = lbeg; l >= lend; l -= 2) {\r\n                for (var i = 1; i <= nrd; ++i) {\r\n                  fSafe[l][i] -= fSafe[l - 2][i]\r\n                }\r\n              }\r\n              if (kmi === 1 && nSeq === 4) {\r\n                l = lend - 2\r\n                for (var i = 1; i <= nrd; ++i) fSafe[l][i] -= dz[icom[i]]\r\n              }\r\n            }\r\n            // compute differences\r\n            for (var kk = ((kmi + 2) / 2) | 0; kk <= kc; ++kk) {\r\n              var lbeg = iPoint[kk + 1] - 1\r\n              var lend = iPoint[kk] + kmi + 2\r\n              for (var l = lbeg; l >= lend; l -= 2) {\r\n                for (var i = 1; i <= nrd; ++i) {\r\n                  fSafe[l][i] -= fSafe[l - 2][i]\r\n                }\r\n              }\r\n            }\r\n          }\r\n          interp(nrd, dens, kmit)\r\n          // estimation of interpolation error\r\n          if (_this.denseOutputErrorEstimator && kmit >= 1) {\r\n            var errint = 0\r\n            for (var i = 1; i <= nrd; ++i)\r\n              errint += Math.pow(dens[(kmit + 4) * nrd + i] / scal[icom[i]], 2)\r\n            errint = Math.sqrt(errint / nrd) * errfac[kmit]\r\n            hoptde = h / Math.max(Math.pow(errint, 1 / (kmit + 4)), 0.01)\r\n            if (errint > 10) {\r\n              h = hoptde\r\n              x = xOld\r\n              ++nReject\r\n              reject = true\r\n              return true\r\n            }\r\n          }\r\n          for (var i = 1; i <= n; ++i) dz[i] = yh2[i]\r\n        }\r\n        for (var i = 1; i <= n; ++i) y[i] = t[1][i]\r\n        ++nAccept\r\n        if (solOut) {\r\n          // If denseOutput, we also want to supply the dense closure.\r\n          if (\r\n            solOut(\r\n              nAccept + 1,\r\n              xOld,\r\n              x,\r\n              y.slice(1),\r\n              _this.denseOutput && contex(xOldd, hhh, kmit, dens, icom)\r\n            ) === false\r\n          )\r\n            return false\r\n        }\r\n        // compute optimal order\r\n        var kopt\r\n        if (kc === 2) {\r\n          kopt = Math.min(3, km - 1)\r\n          if (reject) kopt = 2\r\n        } else {\r\n          if (kc <= k) {\r\n            kopt = kc\r\n            if (w[kc - 1] < w[kc] * _this.stepSizeFac3) kopt = kc - 1\r\n            if (w[kc] < w[kc - 1] * _this.stepSizeFac4)\r\n              kopt = Math.min(kc + 1, km - 1)\r\n          } else {\r\n            kopt = kc - 1\r\n            if (kc > 3 && w[kc - 2] < w[kc - 1] * _this.stepSizeFac3)\r\n              kopt = kc - 2\r\n            if (w[kc] < w[kopt] * _this.stepSizeFac4)\r\n              kopt = Math.min(kc, km - 1)\r\n          }\r\n        }\r\n        // after a rejected step\r\n        if (reject) {\r\n          k = Math.min(kopt, kc)\r\n          h = posneg * Math.min(Math.abs(h), Math.abs(hh[k]))\r\n          reject = false\r\n          return true // goto 10\r\n        }\r\n        if (kopt <= kc) {\r\n          h = hh[kopt]\r\n        } else {\r\n          if (kc < k && w[kc] < w[kc - 1] * _this.stepSizeFac4) {\r\n            h = (hh[kc] * a[kopt + 1]) / a[kc]\r\n          } else {\r\n            h = (hh[kc] * a[kopt]) / a[kc]\r\n          }\r\n        }\r\n        // compute stepsize for next step\r\n        k = kopt\r\n        h = posneg * Math.abs(h)\r\n        return true\r\n      }\r\n      var midex = function(j) {\r\n        var dy = Solver.dim(_this.n)\r\n        // Computes the jth line of the extrapolation table and\r\n        // provides an estimation of the optional stepsize\r\n        var hj = h / nj[j]\r\n        // Euler starting step\r\n        for (var i = 1; i <= _this.n; ++i) {\r\n          yh1[i] = y[i]\r\n          yh2[i] = y[i] + hj * dz[i]\r\n        }\r\n        // Explicit midpoint rule\r\n        var m = nj[j] - 1\r\n        var njMid = (nj[j] / 2) | 0\r\n        for (var mm = 1; mm <= m; ++mm) {\r\n          if (_this.denseOutput && mm === njMid) {\r\n            for (var i = 1; i <= nrd; ++i) {\r\n              ySafe[j][i] = yh2[icom[i]]\r\n            }\r\n          }\r\n          F(x + hj * mm, yh2, dy)\r\n          if (_this.denseOutput && Math.abs(mm - njMid) <= 2 * j - 1) {\r\n            ++iPt\r\n            for (var i = 1; i <= nrd; ++i) {\r\n              fSafe[iPt][i] = dy[icom[i]]\r\n            }\r\n          }\r\n          for (var i = 1; i <= _this.n; ++i) {\r\n            var ys = yh1[i]\r\n            yh1[i] = yh2[i]\r\n            yh2[i] = ys + 2 * hj * dy[i]\r\n          }\r\n          if (\r\n            mm <= _this.stabilityCheckCount &&\r\n            j <= _this.stabilityCheckTableLines\r\n          ) {\r\n            // stability check\r\n            var del1 = 0\r\n            for (var i = 1; i <= _this.n; ++i) {\r\n              del1 += Math.pow(dz[i] / scal[i], 2)\r\n            }\r\n            var del2 = 0\r\n            for (var i = 1; i <= _this.n; ++i) {\r\n              del2 += Math.pow((dy[i] - dz[i]) / scal[i], 2)\r\n            }\r\n            var quot = del2 / Math.max(_this.uRound, del1)\r\n            if (quot > 4) {\r\n              ++nEval\r\n              atov = true\r\n              h *= _this.stepSizeReductionFactor\r\n              reject = true\r\n              return\r\n            }\r\n          }\r\n        }\r\n        // final smoothing step\r\n        F(x + h, yh2, dy)\r\n        if (_this.denseOutput && njMid <= 2 * j - 1) {\r\n          ++iPt\r\n          for (var i = 1; i <= nrd; ++i) {\r\n            fSafe[iPt][i] = dy[icom[i]]\r\n          }\r\n        }\r\n        for (var i = 1; i <= _this.n; ++i) {\r\n          t[j][i] = (yh1[i] + yh2[i] + hj * dy[i]) / 2\r\n        }\r\n        nEval += nj[j]\r\n        // polynomial extrapolation\r\n        if (j === 1) return // was j.eq.1\r\n        var dblenj = nj[j]\r\n        var fac\r\n        for (var l = j; l > 1; --l) {\r\n          fac = Math.pow(dblenj / nj[l - 1], 2) - 1\r\n          for (var i = 1; i <= _this.n; ++i) {\r\n            t[l - 1][i] = t[l][i] + (t[l][i] - t[l - 1][i]) / fac\r\n          }\r\n        }\r\n        err = 0\r\n        // scaling\r\n        for (var i = 1; i <= _this.n; ++i) {\r\n          var t1i = Math.max(Math.abs(y[i]), Math.abs(t[1][i]))\r\n          scal[i] = aTol[i] + rTol[i] * t1i\r\n          err += Math.pow((t[1][i] - t[2][i]) / scal[i], 2)\r\n        }\r\n        err = Math.sqrt(err / _this.n)\r\n        if (err * _this.uRound >= 1 || (j > 2 && err >= errOld)) {\r\n          atov = true\r\n          h *= _this.stepSizeReductionFactor\r\n          reject = true\r\n          return\r\n        }\r\n        errOld = Math.max(4 * err, 1)\r\n        // compute optimal stepsizes\r\n        var exp0 = 1 / (2 * j - 1)\r\n        var facMin = Math.pow(_this.stepSizeFac1, exp0)\r\n        fac = Math.min(\r\n          _this.stepSizeFac2 / facMin,\r\n          Math.max(\r\n            facMin,\r\n            Math.pow(err / _this.stepSafetyFactor1, exp0) /\r\n              _this.stepSafetyFactor2\r\n          )\r\n        )\r\n        fac = 1 / fac\r\n        hh[j] = Math.min(Math.abs(h) * fac, hMax)\r\n        w[j] = a[j] / hh[j]\r\n      }\r\n      var interp = function(n, y, imit) {\r\n        // computes the coefficients of the interpolation formula\r\n        var a = new Array(31) // zero-based: 0:30\r\n        // begin with Hermite interpolation\r\n        for (var i = 1; i <= n; ++i) {\r\n          var y0_1 = y[i]\r\n          var y1 = y[2 * n + i]\r\n          var yp0 = y[n + i]\r\n          var yp1 = y[3 * n + i]\r\n          var yDiff = y1 - y0_1\r\n          var aspl = -yp1 + yDiff\r\n          var bspl = yp0 - yDiff\r\n          y[n + i] = yDiff\r\n          y[2 * n + i] = aspl\r\n          y[3 * n + i] = bspl\r\n          if (imit < 0) continue\r\n          // compute the derivatives of Hermite at midpoint\r\n          var ph0 = (y0_1 + y1) * 0.5 + 0.125 * (aspl + bspl)\r\n          var ph1 = yDiff + (aspl - bspl) * 0.25\r\n          var ph2 = -(yp0 - yp1)\r\n          var ph3 = 6 * (bspl - aspl)\r\n          // compute the further coefficients\r\n          if (imit >= 1) {\r\n            a[1] = 16 * (y[5 * n + i] - ph1)\r\n            if (imit >= 3) {\r\n              a[3] = 16 * (y[7 * n + i] - ph3 + 3 * a[1])\r\n              if (imit >= 5) {\r\n                for (var im = 5; im <= imit; im += 2) {\r\n                  var fac1 = (im * (im - 1)) / 2\r\n                  var fac2 = fac1 * (im - 2) * (im - 3) * 2\r\n                  a[im] =\r\n                    16 *\r\n                    (y[(im + 4) * n + i] + fac1 * a[im - 2] - fac2 * a[im - 4])\r\n                }\r\n              }\r\n            }\r\n          }\r\n          a[0] = (y[4 * n + i] - ph0) * 16\r\n          if (imit >= 2) {\r\n            a[2] = (y[n * 6 + i] - ph2 + a[0]) * 16\r\n            if (imit >= 4) {\r\n              for (var im = 4; im <= imit; im += 2) {\r\n                var fac1 = (im * (im - 1)) / 2\r\n                var fac2 = im * (im - 1) * (im - 2) * (im - 3)\r\n                a[im] =\r\n                  (y[n * (im + 4) + i] + a[im - 2] * fac1 - a[im - 4] * fac2) *\r\n                  16\r\n              }\r\n            }\r\n          }\r\n          for (var im = 0; im <= imit; ++im) y[n * (im + 4) + i] = a[im]\r\n        }\r\n      }\r\n      var contex = function(xOld, h, imit, y, icom) {\r\n        return function(c, x) {\r\n          var i = 0\r\n          for (var j = 1; j <= nrd; ++j) {\r\n            // careful: customers describe components 0-based. We record indices 1-based.\r\n            if (icom[j] === c + 1) i = j\r\n          }\r\n          if (i === 0)\r\n            throw new Error('no dense output available for component ' + c)\r\n          var theta = (x - xOld) / h\r\n          var theta1 = 1 - theta\r\n          var phthet =\r\n            y[i] +\r\n            theta *\r\n              (y[nrd + i] +\r\n                theta1 * (y[2 * nrd + i] * theta + y[3 * nrd + i] * theta1))\r\n          if (imit < 0) return phthet\r\n          var thetah = theta - 0.5\r\n          var ret = y[nrd * (imit + 4) + i]\r\n          for (var im = imit; im >= 1; --im) {\r\n            ret = y[nrd * (im + 3) + i] + (ret * thetah) / im\r\n          }\r\n          return phthet + Math.pow(theta * theta1, 2) * ret\r\n        }\r\n      }\r\n      // preparation\r\n      var ySafe = Solver.dim2(km, nrd)\r\n      var hh = Solver.dim(km)\r\n      var t = Solver.dim2(km, _this.n)\r\n      // Define the step size sequence\r\n      var nj = Solver.stepSizeSequence(nSeq, km)\r\n      // Define the a[i] for order selection\r\n      var a = Solver.dim(km)\r\n      a[1] = 1 + nj[1]\r\n      for (var i = 2; i <= km; ++i) {\r\n        a[i] = a[i - 1] + nj[i]\r\n      }\r\n      // Initial Scaling\r\n      var scal = Solver.dim(_this.n)\r\n      for (var i = 1; i <= _this.n; ++i) {\r\n        scal[i] = aTol[i] + rTol[i] + Math.abs(y[i])\r\n      }\r\n      // Initial preparations\r\n      var posneg = xEnd - x >= 0 ? 1 : -1\r\n      var k = Math.max(\r\n        2,\r\n        Math.min(km - 1, Math.floor(-Solver.log10(rTol[1] + 1e-40) * 0.6 + 1.5))\r\n      )\r\n      var h = Math.max(Math.abs(_this.initialStepSize), 1e-4)\r\n      h = posneg * Math.min(h, hMax, Math.abs(xEnd - x) / 2)\r\n      var iPoint = Solver.dim(km + 1)\r\n      var errfac = Solver.dim(2 * km)\r\n      var xOld = x\r\n      var iPt = 0\r\n      if (solOut) {\r\n        if (_this.denseOutput) {\r\n          iPoint[1] = 0\r\n          for (var i = 1; i <= km; ++i) {\r\n            var njAdd = 4 * i - 2\r\n            if (nj[i] > njAdd) ++njAdd\r\n            iPoint[i + 1] = iPoint[i] + njAdd\r\n          }\r\n          for (var mu = 1; mu <= 2 * km; ++mu) {\r\n            var errx = Math.sqrt(mu / (mu + 4)) * 0.5\r\n            var prod = Math.pow(1 / (mu + 4), 2)\r\n            for (var j = 1; j <= mu; ++j) prod *= errx / j\r\n            errfac[mu] = prod\r\n          }\r\n          iPt = 0\r\n        }\r\n        // check return value and abandon integration if called for\r\n        if (false === solOut(nAccept + 1, xOld, x, y.slice(1))) {\r\n          return Outcome.EarlyReturn\r\n        }\r\n      }\r\n      var err = 0\r\n      var errOld = 1e10\r\n      var hoptde = posneg * hMax\r\n      var w = Solver.dim(km)\r\n      w[1] = 0\r\n      var reject = false\r\n      var last = false\r\n      var atov\r\n      var kc = 0\r\n      var STATE\r\n      ;(function(STATE) {\r\n        STATE[(STATE['Start'] = 0)] = 'Start'\r\n        STATE[(STATE['BasicIntegrationStep'] = 1)] = 'BasicIntegrationStep'\r\n        STATE[(STATE['ConvergenceStep'] = 2)] = 'ConvergenceStep'\r\n        STATE[(STATE['HopeForConvergence'] = 3)] = 'HopeForConvergence'\r\n        STATE[(STATE['Accept'] = 4)] = 'Accept'\r\n        STATE[(STATE['Reject'] = 5)] = 'Reject'\r\n      })(STATE || (STATE = {}))\r\n      var state = STATE.Start\r\n      loop: while (true) {\r\n        _this.debug &&\r\n          console.log('STATE', STATE[state], nStep, xOld, x, h, k, kc, hoptde)\r\n        switch (state) {\r\n          case STATE.Start:\r\n            atov = false\r\n            // Is xEnd reached in the next step?\r\n            if (0.1 * Math.abs(xEnd - x) <= Math.abs(x) * _this.uRound)\r\n              break loop\r\n            h =\r\n              posneg *\r\n              Math.min(Math.abs(h), Math.abs(xEnd - x), hMax, Math.abs(hoptde))\r\n            if ((x + 1.01 * h - xEnd) * posneg > 0) {\r\n              h = xEnd - x\r\n              last = true\r\n            }\r\n            if (nStep === 0 || !_this.denseOutput) {\r\n              F(x, y, dz)\r\n              ++nEval\r\n            }\r\n            // The first and last step\r\n            if (nStep === 0 || last) {\r\n              iPt = 0\r\n              ++nStep\r\n              for (var j = 1; j <= k; ++j) {\r\n                kc = j\r\n                midex(j)\r\n                if (atov) continue loop\r\n                if (j > 1 && err <= 1) {\r\n                  state = STATE.Accept\r\n                  continue loop\r\n                }\r\n              }\r\n              state = STATE.HopeForConvergence\r\n              continue\r\n            }\r\n            state = STATE.BasicIntegrationStep\r\n            continue\r\n          case STATE.BasicIntegrationStep:\r\n            // basic integration step\r\n            iPt = 0\r\n            ++nStep\r\n            if (nStep >= _this.maxSteps) {\r\n              return Outcome.MaxStepsExceeded\r\n            }\r\n            kc = k - 1\r\n            for (var j = 1; j <= kc; ++j) {\r\n              midex(j)\r\n              if (atov) {\r\n                state = STATE.Start\r\n                continue loop\r\n              }\r\n            }\r\n            // convergence monitor\r\n            if (k === 2 || reject) {\r\n              state = STATE.ConvergenceStep\r\n            } else {\r\n              if (err <= 1) {\r\n                state = STATE.Accept\r\n              } else if (err > Math.pow((nj[k + 1] * nj[k]) / 4, 2)) {\r\n                state = STATE.Reject\r\n              } else state = STATE.ConvergenceStep\r\n            }\r\n            continue\r\n          case STATE.ConvergenceStep:\r\n            midex(k)\r\n            if (atov) {\r\n              state = STATE.Start\r\n              continue\r\n            }\r\n            kc = k\r\n            if (err <= 1) {\r\n              state = STATE.Accept\r\n              continue\r\n            }\r\n            state = STATE.HopeForConvergence\r\n            continue\r\n          case STATE.HopeForConvergence:\r\n            // hope for convergence in line k + 1\r\n            if (err > Math.pow(nj[k + 1] / 2, 2)) {\r\n              state = STATE.Reject\r\n              continue\r\n            }\r\n            kc = k + 1\r\n            midex(kc)\r\n            if (atov) state = STATE.Start\r\n            else if (err > 1) state = STATE.Reject\r\n            else state = STATE.Accept\r\n            continue\r\n          case STATE.Accept:\r\n            if (!acceptStep(_this.n)) return Outcome.EarlyReturn\r\n            state = STATE.Start\r\n            continue\r\n          case STATE.Reject:\r\n            k = Math.min(k, kc, km - 1)\r\n            if (k > 2 && w[k - 1] < w[k] * _this.stepSizeFac3) k -= 1\r\n            ++nReject\r\n            h = posneg * hh[k]\r\n            reject = true\r\n            state = STATE.BasicIntegrationStep\r\n        }\r\n      }\r\n      return Outcome.Converged\r\n    }\r\n    var outcome = odxcor()\r\n    return {\r\n      y: y.slice(1),\r\n      outcome: outcome,\r\n      nStep: nStep,\r\n      xEnd: xEnd,\r\n      nAccept: nAccept,\r\n      nReject: nReject,\r\n      nEval: nEval,\r\n    }\r\n  }\r\n  return Solver\r\n})()\r\n// return a 1-based array of length n. Initial values undefined.\r\nSolver.dim = function(n) {\r\n  return Array(n + 1)\r\n}\r\nSolver.log10 = function(x) {\r\n  return Math.log(x) / Math.LN10\r\n}\r\nexports.Solver = Solver\r\n//# sourceMappingURL=odex.js.map\r\n","const convection = function convection(\r\n  v = 10,\r\n  t = 293.15,\r\n  d = 0.05,\r\n  p = 101325\r\n) {\r\n  let Vwind = v\r\n  let Dcyl = d\r\n  let Tair = t\r\n  let pA = p\r\n  function kAir(T) {\r\n    if (T > 1000) {\r\n      return kAir(1000)\r\n    }\r\n    if (T < 70) {\r\n      return kAir(70)\r\n    }\r\n    return (\r\n      -8.404165e-4 +\r\n      1.107418e-4 * T -\r\n      8.635537e-8 * T ** 2 +\r\n      6.31411e-11 * T ** 3 -\r\n      1.88168e-14 * T ** 4\r\n    )\r\n  }\r\n  function cpAir(T) {\r\n    if (T < 100) {\r\n      return cpAir(100)\r\n    }\r\n    if (T < 375) {\r\n      return (\r\n        1010.97 +\r\n        0.0439479 * T ** 1 -\r\n        2.922398e-4 * T ** 2 +\r\n        6.503467e-7 * T ** 3\r\n      )\r\n    }\r\n    if (T < 1300) {\r\n      return (\r\n        1093.29 -\r\n        0.6355521 * T ** 1 +\r\n        0.001633992 * T ** 2 -\r\n        1.412935e-6 * T ** 3 +\r\n        5.59492e-10 * T ** 4 -\r\n        8.663072e-14 * T ** 5\r\n      )\r\n    }\r\n    if (T <= 3000) {\r\n      return (\r\n        701.0807 +\r\n        0.8493867 * T ** 1 -\r\n        5.846487e-4 * T ** 2 +\r\n        2.302436e-7 * T ** 3 -\r\n        4.846758e-11 * T ** 4 +\r\n        4.23502e-15 * T ** 5\r\n      )\r\n    }\r\n    return cpAir(3000)\r\n  }\r\n  function rhoAir(press, T) {\r\n    if (T <= 80) {\r\n      return 352.716 * 80 ** -1\r\n    }\r\n    if (T <= 3000) {\r\n      return 352.716 * T ** -1\r\n    }\r\n    return 352.716 * 3000 ** -1\r\n  }\r\n  function etaAir(T) {\r\n    if (T < 120) {\r\n      return etaAir(120)\r\n    }\r\n    if (T < 600) {\r\n      return (\r\n        -1.132275e-7 +\r\n        7.94333e-8 * T ** 1 -\r\n        7.197989e-11 * T ** 2 +\r\n        5.158693e-14 * T ** 3 -\r\n        1.592472e-17 * T ** 4\r\n      )\r\n    }\r\n    if (T <= 2150) {\r\n      return (\r\n        3.892629e-6 +\r\n        5.75387e-8 * T ** 1 -\r\n        2.675811e-11 * T ** 2 +\r\n        9.709691e-15 * T ** 3 -\r\n        1.355541e-18 * T ** 4\r\n      )\r\n    }\r\n    return etaAir(2150)\r\n  }\r\n  function Re(Tinp) {\r\n    return (rhoAir(pA, Tinp) * Vwind * Dcyl) / etaAir(Tinp)\r\n  }\r\n  function Pr(Tinp) {\r\n    return (etaAir(Tinp) * cpAir(Tinp)) / kAir(Tinp)\r\n  }\r\n  // eslint-disable-next-line no-underscore-dangle\r\n  function hConvFunc(Tinp, v1, t1, d1, p1) {\r\n    if (v1) {\r\n      Vwind = v1\r\n    }\r\n    if (d1) {\r\n      Dcyl = d1\r\n    }\r\n    if (t1) {\r\n      Tair = t1\r\n    }\r\n    if (p1) {\r\n      pA = p1\r\n    }\r\n    const Tfilm = (Tinp + Tair) / 2\r\n    const Hc =\r\n      (kAir(Tfilm) *\r\n        (0.3 +\r\n          (0.62 *\r\n            Math.sqrt(Re(Tfilm)) *\r\n            Pr(Tfilm) ** (1 / 3) *\r\n            (1 + 0.0003922783206 * Re(Tfilm) ** 0.625) ** 0.8) /\r\n            (1 + 0.5428835233 * (1 / Pr(Tfilm)) ** (2 / 3)) ** 0.25)) /\r\n      Dcyl\r\n    return Hc\r\n  }\r\n\r\n  const hConvObj = {\r\n    setCondition: function setCondition(\r\n      v1 = Vwind,\r\n      t1 = Tair,\r\n      d1 = Dcyl,\r\n      p1 = pA\r\n    ) {\r\n      Vwind = v1\r\n      Dcyl = d1\r\n      Tair = t1\r\n      pA = p1\r\n    },\r\n  }\r\n  return Object.assign(hConvFunc, hConvObj)\r\n}\r\n\r\nexport function convectionObj(obj) {\r\n  return convection(\r\n    obj.Vwind.value,\r\n    obj.Tair.unit === 'К' ? obj.Tair.value : obj.Tair.value + 273.15,\r\n    obj.Dcyl.value,\r\n    obj.pA.value\r\n  )\r\n}\r\n\r\nexport default convection\r\n","'use strict';\r\n\r\n/**\r\n * Constructs an object storing rational numbers and methods performing operations\r\n * \r\n * @param num numerator of the rational number\r\n * @param den denomenator of the rational number\r\n * @returns Object storing the rational number and method doing arthmetic operations\r\n */\r\nfunction rational(num, den) {\r\n  den = den || 1;\r\n  if (Math.sign(den) === -1) {\r\n    num = -num;\r\n    den = -den;\r\n  }\r\n  return {\r\n    num: num,\r\n    den: den,\r\n    add: (op) => rational(num * op.den + den * op.num, den * op.den),\r\n    sub: (op) => rational(num * op.den - den * op.num, den * op.den),\r\n    mul: (op) => multiply(op, num, den),\r\n    div: (op) => {\r\n      let _num = op.den;\r\n      let _den = op.num;\r\n      return multiply(rational(_num, _den), num, den);\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = rational;\r\n\r\n/**\r\n * Multiplies two rational number based on multiplication rules that cancels common terms\r\n * \r\n * @param op the second operand\r\n * @param num numerator of first operand\r\n * @param den denominator of second operand\r\n * @returns another rational number\r\n */\r\nfunction multiply(op, num, den) {\r\n  let _num = Math.sign(num) * Math.sign(op.num);\r\n  let _den = Math.sign(den) * Math.sign(op.den);\r\n  if (Math.abs(num) === Math.abs(op.den) && Math.abs(den) === Math.abs(op.num)) {\r\n    _num = _num;\r\n    _den = _den;\r\n  } else if (Math.abs(den) === Math.abs(op.num)) {\r\n    _num = _num * Math.abs(num);\r\n    _den = _den * Math.abs(op.den);\r\n  } else if (Math.abs(num) === Math.abs(op.den)) {\r\n    _num = _num * Math.abs(op.num);\r\n    _den = _den * Math.abs(den);\r\n  } else {\r\n    _num = num * op.num;\r\n    _den = den * op.den;\r\n  }\r\n  return rational(_num, _den);\r\n}\r\n","'use strict';\r\n\r\n/**\r\n * Merges two matrices in all directions\r\n * \r\n * @param {Array} base Base matrix on which merge is performed\r\n */\r\nfunction merge(base) {\r\n    return {\r\n        top: (mergeData) => top(base, mergeData),\r\n        bottom: (mergeData) => bottom(base, mergeData),\r\n        left: (mergeData) => left(base, mergeData),\r\n        right: (mergeData) => right(base, mergeData)\r\n    }\r\n}\r\n\r\nmodule.exports = merge;\r\n\r\n/**\r\n * Merges the base matrix with the incoming matrix in the top direction\r\n * @param {Array} base \r\n * @param {Array} mergeData incoming matrix\r\n */\r\nfunction top(base, mergeData) {\r\n    let baseWidth = base[0].length || base.length;\r\n    let mergeDataWidth = mergeData[mergeData.length - 1].length || mergeData.length;\r\n\r\n    if (baseWidth !== mergeDataWidth) {\r\n        return base;\r\n    }\r\n\r\n    if (!Array.isArray(base[0])) {\r\n        base = [base];\r\n    }\r\n\r\n    if (!Array.isArray(mergeData[mergeData.length - 1])) {\r\n        mergeData = [mergeData];\r\n    }\r\n\r\n    for (let row = mergeData.length - 1; row >= 0; row--) {\r\n        base.unshift(mergeData[row].map((ele) => ele));\r\n    }\r\n    return base;\r\n}\r\n\r\n/**\r\n * Merges the base matrix with the incoming matrix in the bottom direction\r\n * @param {Array} base \r\n * @param {Array} mergeData incoming matrix\r\n */\r\nfunction bottom(base, mergeData) {\r\n    let baseWidth = base[base.length - 1].length || base.length;\r\n    let mergeDataWidth = mergeData[0].length || mergeData.length;\r\n    if (baseWidth !== mergeDataWidth) {\r\n        return base;\r\n    }\r\n\r\n    if (!Array.isArray(base[base.length - 1])) {\r\n        base = [base];\r\n    }\r\n\r\n    if (!Array.isArray(mergeData[0])) {\r\n        mergeData = [mergeData];\r\n    }\r\n\r\n\r\n    for (let row = 0; row < mergeData.length; row++) {\r\n        base.push(mergeData[row].map((ele) => ele));\r\n    }\r\n    return base;\r\n}\r\n\r\n/**\r\n * Merges the base matrix with the incoming matrix in the left direction\r\n * @param {Array} base \r\n * @param {Array} mergeData incoming matrix\r\n */\r\nfunction left(base, mergeData) {\r\n    let baseHeight = base.length;\r\n    let mergeDataHeight = mergeData.length;\r\n    if (!Array.isArray(base[0]) && !Array.isArray(mergeData[0])) {\r\n        base.unshift.apply(base, mergeData);\r\n        return base;\r\n    }\r\n\r\n    if (baseHeight !== mergeDataHeight) {\r\n        return base;\r\n    }\r\n\r\n    for (let row = 0; row < baseHeight; row++) {\r\n        base[row].unshift.apply(base[row], mergeData[row].map((ele) => ele));\r\n    }\r\n    return base;\r\n}\r\n\r\n/**\r\n * Merges the base matrix with the incoming matrix in the right direction\r\n * @param {Array} base \r\n * @param {Array} mergeData incoming matrix\r\n */\r\nfunction right(base, mergeData) {\r\n    let baseHeight = base.length;\r\n    let mergeDataHeight = mergeData.length;\r\n    if (!Array.isArray(base[0]) && !Array.isArray(mergeData[0])) {\r\n        base.push.apply(base, mergeData);\r\n        return base;\r\n    }\r\n\r\n    if (baseHeight !== mergeDataHeight) {\r\n        return base;\r\n    }\r\n\r\n    for (let row = 0; row < baseHeight; row++) {\r\n        base[row].push.apply(base[row], mergeData[row].map((ele) => ele));\r\n    }\r\n    return base;\r\n}\r\n","'use strict';\r\n\r\nconst rational = require('./rational');\r\nconst merge = require('./merge');\r\n\r\n/**\r\n * Pass a 2-dimensional array that will return a function accepting indices to access the matrix\r\n *\r\n * @param mat array that initializes the matrix\r\n * @returns function with the array initialized and access to method that perform operations on the matrix\r\n */\r\nfunction matrix(mat) {\r\n    if (!Array.isArray(mat)) {\r\n        throw new Error('Input should be of type array');\r\n    }\r\n    let _matrix = function() {\r\n        let args = (arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments));\r\n        return read(mat, args);\r\n    }\r\n    return Object.assign(_matrix, _mat(mat));\r\n}\r\n\r\n\r\n/**\r\n * Private function that returns an object containing methods\r\n * that perform operations on the matrix\r\n *\r\n * @param mat array that initializes the matrix\r\n * @returns object of methods performing matrix operations\r\n */\r\nfunction _mat(mat) {\r\n    return {\r\n        size: () => size(mat),\r\n        add: (operand) => operate(mat, operand, addition),\r\n        sub: (operand) => operate(mat, operand, subtraction),\r\n        mul: (operand) => operate(mat, operand, multiplication),\r\n        div: (operand) => operate(mat, operand, division),\r\n        prod: (operand) => prod(mat, operand),\r\n        trans: () => trans(mat),\r\n        set: function() {\r\n            let args = (arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments));\r\n            return {\r\n                to: (val) => replace(mat, val, args)\r\n            }\r\n        },\r\n        det: () => determinant(mat),\r\n        inv: () => invert(mat),\r\n        merge: merge(mat),\r\n        map: (func) => map(mat, func)\r\n    };\r\n}\r\n\r\nmodule.exports = matrix;\r\n\r\n\r\n/**\r\n * Calculates the size of the array across each dimension\r\n *\r\n * @param mat input matrix that initialized the function\r\n * @returns size of the matrix as an array\r\n */\r\nfunction size(mat) {\r\n    let s = [];\r\n    while (Array.isArray(mat)) {\r\n        s.push(mat.length);\r\n        mat = mat[0];\r\n    }\r\n    return s;\r\n}\r\n\r\n\r\n/**\r\n * Private function to calculate the dimensions of the matrix\r\n *\r\n * @param mat input matrix that initializes the function\r\n * @returns integer indicating the number of dimensions\r\n */\r\nfunction dimensions(mat) {\r\n    return size(mat).length;\r\n}\r\n\r\n\r\n/**\r\n * Outputs the original matrix or a particular element or a matrix that is part of the original\r\n *\r\n * @param mat input matrix that initializes the function\r\n * @param args indices to access one or more array elements\r\n * @returns array or single element\r\n */\r\nfunction read(mat, args) {\r\n    if (args.length === 0) {\r\n        return mat;\r\n    } else {\r\n        return extract(mat, args);\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Private function to extract a single element or a matrix that is part of the original\r\n *\r\n * @param mat input matrix that initializes the function\r\n * @param args indices to access one or more array elements\r\n * @returns array or single element\r\n */\r\nfunction extract(mat, args) {\r\n    let dim = dimensions(mat);\r\n    for (let i = 0; i < dim; i++) {\r\n        let d = args[i];\r\n        if (d === undefined) {\r\n            break;\r\n        }\r\n        if (Array.isArray(d)) {\r\n            // if an element of args is an array, more extraction is needed\r\n            mat = extractRange(mat, d, i);\r\n        } else if (Number.isInteger(d)) {\r\n            if (dimensions(mat) > 1 && i > 0) {\r\n                mat = mat.map(function(elem) {\r\n                    return [elem[d]];\r\n                });\r\n            } else {\r\n                mat = mat[d];\r\n            }\r\n        }\r\n    }\r\n    return mat;\r\n}\r\n\r\n\r\n/**\r\n * Private function to extract a portion of the array based on the specified range\r\n *\r\n * @param mat input matrix that initialized the function\r\n * @param arg single argument containing the range specified as an array\r\n * @param ind the current index of the arguments while extracting the matrix\r\n * @returns array from the specified range\r\n */\r\nfunction extractRange(mat, arg, ind) {\r\n    if (!arg.length) {\r\n        return mat;\r\n    } else if (arg.length === 2) {\r\n        let reverse = arg[0] > arg[1];\r\n        let first = (!reverse) ? arg[0] : arg[1];\r\n        let last = (!reverse) ? arg[1]: arg[0];\r\n        if (dimensions(mat) > 1 && ind > 0) {\r\n            return mat.map(function(elem) {\r\n                if (reverse) {\r\n                    return elem.slice(first, last+1).reverse();\r\n                }\r\n                return elem.slice(first, last+1);\r\n            })\r\n        } else {\r\n            mat = mat.slice(first, last+1);\r\n            return (reverse && mat.reverse()) || mat;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Replaces the specified index in the matrix with the specified value\r\n *\r\n * @param mat input matrix that initialized the function\r\n * @param value specified value that replace current value at index or indices\r\n * @param args index or indices passed in arguments to initialized function\r\n * @returns replaced matrix\r\n */\r\nfunction replace(mat, value, args) { //TODO: Clean this function up\r\n    let result = clone(mat);\r\n    let prev = args[0];\r\n    let start = prev[0] || 0;\r\n    let end = prev[1] && prev[1] + 1 || mat.length;\r\n    if (!Array.isArray(prev) && args.length === 1) {\r\n        result[prev].fill(value);\r\n    } else if (args.length === 1) {\r\n        for (let ind = start; ind < end; ind++) {\r\n            result[ind].fill(value);\r\n        }\r\n    }\r\n    for (let i = 1; i < args.length; i++) {\r\n        let first = Array.isArray(args[i]) ? args[i][0] || 0 : args[i];\r\n        let last = Array.isArray(args[i]) ? args[i][1] && args[i][1] + 1 || mat[0].length : args[i] + 1;\r\n        if (!Array.isArray(prev)) {\r\n            result[prev].fill(value, first, last);\r\n        } else {\r\n            for (let ind = start; ind < end; ind++) {\r\n                result[ind].fill(value, first, last);\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n\r\n/**\r\n * Operates on two matrices of the same size\r\n *\r\n * @param mat input matrix that initialized the function\r\n * @param operand second matrix with which operation is performed\r\n * @param operation function performing the desired operation\r\n * @returns result of the operation\r\n */\r\nfunction operate(mat, operand, operation) {\r\n    let result = [];\r\n    let op = operand();\r\n\r\n    for (let i = 0; i < mat.length; i++) {\r\n        let op1 = mat[i];\r\n        let op2 = op[i];\r\n        result.push(op1.map(function(elem, ind) {\r\n            return operation(elem, op2[ind]);\r\n        }));\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n\r\n/**\r\n * Finds the product of two matrices\r\n *\r\n * @param mat input matrix that initialized the function\r\n * @param operand second matrix with which operation is performed\r\n * @returns the product of the two matrices\r\n */\r\nfunction prod(mat, operand) {\r\n    let op1 = mat;\r\n    let op2 = operand();\r\n    let size1 = size(op1);\r\n    let size2 = size(op2);\r\n    let result = [];\r\n    if (size1[1] === size2[0]) {\r\n        for (let i = 0; i < size1[0]; i++) {\r\n            result[i] = [];\r\n            for (let j = 0; j < size2[1]; j++) {\r\n                for (let k = 0; k < size1[1]; k++) {\r\n                    if (result[i][j] === undefined) {\r\n                        result[i][j] = 0;\r\n                    }\r\n                    result[i][j] += multiplication(op1[i][k], op2[k][j]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n\r\n/**\r\n * Returns the transpose of a matrix, swaps rows with columns\r\n *\r\n * @param mat input matrix that initialized the function\r\n * @returns a matrix with rows and columns swapped from the original matrix\r\n */\r\nfunction trans(mat) {\r\n    let input = mat;\r\n    let s = size(mat);\r\n    let output = [];\r\n    for (let i = 0; i < s[0]; i++) {\r\n        for (let j = 0; j < s[1]; j++) {\r\n            if (Array.isArray(output[j])) {\r\n                output[j].push(input[i][j]);\r\n            } else {\r\n                output[j] = [input[i][j]];\r\n            }\r\n        }\r\n    }\r\n    return output;\r\n}\r\n\r\n/**\r\n * Private method to clone the matrix\r\n *\r\n * @param mat input matrix that initialized the function\r\n * @returns cloned matrix\r\n */\r\nfunction clone(mat) {\r\n    let result = [];\r\n    for (let i = 0; i < mat.length; i++) {\r\n        result.push(mat[i].slice(0));\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Performs addition\r\n *\r\n * @param op1 first operand\r\n * @param op2 second operand\r\n * @returns result\r\n */\r\nfunction addition(op1, op2) {\r\n    return op1 + op2;\r\n}\r\n\r\n/**\r\n * Performs subtraction\r\n *\r\n * @param op1 first operand\r\n * @param op2 second operand\r\n * @returns result\r\n */\r\nfunction subtraction(op1, op2) {\r\n    return op1 - op2;\r\n}\r\n\r\n/**\r\n * Performs multiplication\r\n *\r\n * @param op1 first operand\r\n * @param op2 second operand\r\n * @returns result\r\n */\r\nfunction multiplication(op1, op2) {\r\n    return op1 * op2;\r\n}\r\n\r\n/**\r\n * Performs division\r\n *\r\n * @param op1 first operand\r\n * @param op2 second operand\r\n * @returns result\r\n */\r\nfunction division(op1, op2) {\r\n    return op1/op2;\r\n}\r\n\r\n\r\n/**\r\n * Computes the determinant using row reduced echelon form\r\n * Works best if the elements are integers or rational numbers\r\n * The matrix must be a square\r\n *\r\n * @param mat input matrix that initialized the function\r\n * @returns determinant value as a number\r\n */\r\nfunction determinant(mat) {\r\n    let rationalized = rationalize(mat);\r\n    let siz = size(mat);\r\n    let det = rational(1);\r\n    let sign = 1;\r\n\r\n    for (let i = 0; i < siz[0] - 1; i++) {\r\n        for (let j = i + 1; j < siz[0]; j++) {\r\n            if (rationalized[j][i].num === 0) {\r\n                continue;\r\n            }\r\n            if (rationalized[i][i].num === 0) {\r\n                interchange(rationalized, i, j);\r\n                sign = -sign;\r\n                continue;\r\n            }\r\n            let temp = rationalized[j][i].div(rationalized[i][i]);\r\n            temp = rational(Math.abs(temp.num), temp.den);\r\n            if (Math.sign(rationalized[j][i].num) === Math.sign(rationalized[i][i].num)) {\r\n                temp = rational(-temp.num, temp.den);\r\n            }\r\n            for (let k = 0; k < siz[1]; k++) {\r\n                 rationalized[j][k] = temp.mul(rationalized[i][k]).add(rationalized[j][k]);\r\n            }\r\n        }\r\n    }\r\n\r\n    det = rationalized.reduce((prev, curr, index) => prev.mul(curr[index]), rational(1));\r\n\r\n    return sign * det.num/det.den;\r\n}\r\n\r\n/**\r\n * Interchanges one row index with another on passed matrix\r\n *\r\n * @param mat input matrix\r\n * @param ind1 one of the row indices to exchange\r\n * @param ind2 one of the row indices to exchange\r\n */\r\nfunction interchange(mat, ind1, ind2) {\r\n    let temp = mat[ind1];\r\n    mat[ind1] = mat[ind2];\r\n    mat[ind2] = temp;\r\n}\r\n\r\n/**\r\n * Inverts the input square matrix using row reduction technique\r\n * Works best if the elements are integers or rational numbers\r\n * The matrix has to be a square and non-singular\r\n *\r\n * @param mat input matrix\r\n * @returns inverse of the input matrix\r\n */\r\nfunction invert(mat) {\r\n    let rationalized = rationalize(mat);\r\n    let siz = size(mat);\r\n    let result = rationalize(identity(siz[0]));\r\n\r\n    // Row Reduction\r\n    for (let i = 0; i < siz[0] - 1; i++) {\r\n        if (rationalized[i][i].num === 0) {\r\n            interchange(rationalized, i, i + 1);\r\n            interchange(result, i, i + 1);\r\n        }\r\n        if (rationalized[i][i].num !== 1 || rationalized[i][i] !== 1) {\r\n            let factor = rational(rationalized[i][i].num, rationalized[i][i].den);\r\n            for (let col = 0; col < siz[1]; col++) {\r\n                rationalized[i][col] = rationalized[i][col].div(factor);\r\n                result[i][col] = result[i][col].div(factor);\r\n            }\r\n        }\r\n        for (let j = i + 1; j < siz[0]; j++) {\r\n            if (rationalized[j][i].num === 0) {\r\n                // skip as no row elimination is needed\r\n                continue;\r\n            }\r\n            \r\n            let temp = rational(-rationalized[j][i].num, rationalized[j][i].den);\r\n            for (let k = 0; k < siz[1]; k++) {\r\n                rationalized[j][k] = temp.mul(rationalized[i][k]).add(rationalized[j][k]);\r\n                result[j][k] = temp.mul(result[i][k]).add(result[j][k]);\r\n            }\r\n        }\r\n    }\r\n    // Further reduction to convert rationalized to identity\r\n    let last = siz[0] - 1;\r\n    if (rationalized[last][last].num !== 1 || rationalized[last][last] !== 1) {\r\n        let factor = rational(rationalized[last][last].num, rationalized[last][last].den);\r\n        for (let col = 0; col < siz[1]; col++) {\r\n            rationalized[last][col] = rationalized[last][col].div(factor);\r\n            result[last][col] = result[last][col].div(factor);\r\n        }\r\n    }\r\n    for (let i = siz[0] - 1; i > 0; i--) {\r\n        for (let j = i - 1; j >= 0; j--) {\r\n            let temp = rational(-rationalized[j][i].num, rationalized[j][i].den);\r\n            for (let k = 0; k < siz[1]; k++) {\r\n                rationalized[j][k] = temp.mul(rationalized[i][k]).add(rationalized[j][k]);\r\n                result[j][k] = temp.mul(result[i][k]).add(result[j][k]);\r\n            }\r\n        }\r\n    }\r\n\r\n    return derationalize(result);\r\n}\r\n\r\n/**\r\n * Applies a given function over the matrix, elementwise. Similar to Array.map()\r\n * The supplied function is provided 4 arguments:\r\n * the current element,\r\n * the row index,\r\n * the col index,\r\n * the matrix.\r\n *\r\n * @param mat input matrix\r\n * @returns matrix of same dimensions with values altered by the function.\r\n */\r\nfunction map(mat, func) {\r\n    const s = size(mat);\r\n    const result = [];\r\n    for (let i = 0; i < s[0]; i++) {\r\n        if(Array.isArray(mat[i])) {\r\n            result[i] = [];\r\n            for (let j = 0; j < s[1]; j++) {\r\n                result[i][j] = func(mat[i][j], i, j, mat);\r\n            }\r\n        } else {\r\n            result[i] = func(mat[i], i, 0, mat);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Converts a matrix of numbers to all rational type objects\r\n *\r\n * @param mat input matrix\r\n * @returns matrix with elements of type rational\r\n */\r\nfunction rationalize(mat) {\r\n    let rationalized = [];\r\n    mat.forEach((row, ind) => {\r\n        rationalized.push(row.map((ele) => rational(ele)));\r\n    });\r\n    return rationalized;\r\n}\r\n\r\n/**\r\n * Converts a rationalized matrix to all numerical values\r\n *\r\n * @param mat input matrix\r\n * @returns matrix with numerical values\r\n */\r\nfunction derationalize(mat) {\r\n    let derationalized = [];\r\n    mat.forEach((row, ind) => {\r\n        derationalized.push(row.map((ele) => ele.num/ele.den));\r\n    });\r\n    return derationalized;\r\n}\r\n\r\n/**\r\n * Generates a square matrix of specified size all elements with same specified value\r\n *\r\n * @param size specified size\r\n * @param val specified value\r\n * @returns square matrix\r\n */\r\nfunction generate(size, val) {\r\n    let dim = 2;\r\n    while (dim > 0) {\r\n        var arr = [];\r\n        for (var i = 0; i < size; i++) {\r\n            if (Array.isArray(val)) {\r\n                arr.push(Object.assign([], val));\r\n            } else {\r\n                arr.push(val);\r\n            }\r\n        }\r\n        val = arr;\r\n        dim -= 1;\r\n    }\r\n    return val;\r\n}\r\n\r\n/**\r\n * Generates an identity matrix of the specified size\r\n *\r\n * @param size specified size\r\n * @returns identity matrix\r\n */\r\nfunction identity(size) {\r\n    let result = generate(size, 0);\r\n    result.forEach((row, index) => {\r\n        row[index] = 1;\r\n    });\r\n    return result;\r\n}\r\n","// const matrix = require ('matrix-js');\r\nimport matrix from 'matrix-js'\r\n\r\nfunction matInterchange(inMat, ind1, ind2) {\r\n  const rez = new Array(inMat)\r\n  const temp = rez[ind1]\r\n  rez[ind1] = rez[ind2]\r\n  rez[ind2] = temp\r\n  return inMat\r\n}\r\nfunction matSize(m) {\r\n  const s = []\r\n  let mat = m\r\n  while (Array.isArray(mat)) {\r\n    s.push(mat.length)\r\n    // eslint-disable-next-line no-param-reassign\r\n    ;[mat] = mat\r\n  }\r\n  return s\r\n}\r\nfunction matIdentity(size) {\r\n  const str = new Array(size)\r\n  str.fill(0)\r\n  const rez = new Array(size)\r\n  rez.fill(str)\r\n  return rez.map((el1, i1) => {\r\n    return el1.map((el2, i2) => {\r\n      if (i1 === i2) return 1\r\n      return el2\r\n    })\r\n  })\r\n}\r\n\r\nfunction matInv(inp) {\r\n  const mat = inp()\r\n  const siz = matSize(mat)\r\n  const result = matIdentity(siz[0])\r\n  // Row Reduction\r\n  for (let i = 0; i < siz[0] - 1; i += 1) {\r\n    if (mat[i][i].num === 0) {\r\n      matInterchange(mat, i, i + 1)\r\n      matInterchange(result, i, i + 1)\r\n    }\r\n    if (mat[i][i] !== 1) {\r\n      const factor = mat[i][i]\r\n      for (let col = 0; col < siz[1]; col += 1) {\r\n        mat[i][col] /= factor\r\n        result[i][col] /= factor\r\n      }\r\n    }\r\n    for (let j = i + 1; j < siz[0]; j += 1) {\r\n      if (!(mat[j][i].num === 0)) {\r\n        const temp = -mat[j][i]\r\n        for (let k = 0; k < siz[1]; k += 1) {\r\n          mat[j][k] = temp * mat[i][k] + mat[j][k]\r\n          result[j][k] = temp * result[i][k] + result[j][k]\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // Further reduction to convert mat to identity\r\n  const last = siz[0] - 1\r\n  if (mat[last][last] !== 1) {\r\n    const factor = mat[last][last]\r\n    for (let col = 0; col < siz[1]; col += 1) {\r\n      mat[last][col] /= factor\r\n      result[last][col] /= factor\r\n    }\r\n  }\r\n  for (let i = siz[0] - 1; i > 0; i -= 1) {\r\n    for (let j = i - 1; j >= 0; j -= 1) {\r\n      const temp = -mat[j][i]\r\n      for (let k = 0; k < siz[1]; k += 1) {\r\n        mat[j][k] = temp * mat[i][k] + mat[j][k]\r\n        result[j][k] = temp * result[i][k] + result[j][k]\r\n      }\r\n    }\r\n  }\r\n  return matrix(result)\r\n}\r\n\r\nclass Circuit {\r\n  constructor(rIni, aIni, arrJ) {\r\n    this.A = matrix(aIni)\r\n    this.Y = matrix(\r\n      rIni.map((el, i, arr) => arr.map((el2, i2) => (i2 === i ? 1 / el : 0)))\r\n    )\r\n    this.Ay = matrix(this.A.prod(this.Y))\r\n    this.Ayat = matrix(this.Ay.prod(matrix(this.A.trans())))\r\n    this.invAyat = matInv(this.Ayat)\r\n    this.arrJ = arrJ\r\n  }\r\n\r\n  U0(arri) {\r\n    this.J = this.arrJ.map((el, i) => el.map(e => e * arri[i]))\r\n    this.J = this.J.reduce((acc, el) => acc.map((e, i2) => e + el[i2]))\r\n    this.J = this.J.map(el => [el])\r\n    this.J = matrix(this.J)\r\n    this.minAj = matrix(matrix(this.A.map(el => -1 * el)).prod(this.J))\r\n    return matrix(this.invAyat.prod(this.minAj))\r\n  }\r\n\r\n  U(arri) {\r\n    const rez = matrix(matrix(this.A.trans()).prod(this.U0(arri)))\r\n    return rez\r\n  }\r\n\r\n  E(arri) {\r\n    let rez = this.U(arri)()\r\n    rez = rez.reduce((acc, el, i) => {\r\n      return acc + el[0] ** 2 * this.Y(i, i)\r\n    }, 0)\r\n    return rez\r\n  }\r\n\r\n  Es(arri) {\r\n    const u0 = this.U0(arri)()\r\n    const n = (u0.length + 1) / 3\r\n    return u0[0][0] * arri[0] + u0[2 * n][0] * arri[1]\r\n  }\r\n\r\n  I(arri) {\r\n    let rez = this.U(arri)()\r\n    rez = matrix(rez.map((el, i) => el[0] * this.Y(i, i)))\r\n    return rez\r\n  }\r\n}\r\n\r\nexport default Circuit\r\n","import Circuit from './circuit'\r\nimport Simplex from './NMSimplex'\r\n\r\nconst ref = [\r\n  {\r\n    cont: 16,\r\n    value: [\r\n      [0, 1000, 11.42079057],\r\n      [1000, 0, 25.40112634],\r\n      // [1000, 1000, 48.30202308]\r\n    ],\r\n  },\r\n  // {\r\n  //     cont: 116,\r\n  //     value: [\r\n  //         [0, 1000, 12.48609821],\r\n  //         [1000, 0, 125.9612051]\r\n  //         // [1000, 1000, 150.9349398]\r\n  //     ]\r\n\r\n  // },\r\n  // {\r\n  //     cont: 316,\r\n  //     value: [\r\n  //         [0, 1000, 12.6247969],\r\n  //         [1000, 0, 325.9571596]\r\n  //         // [1000, 1000, 351.206916]\r\n  //     ]\r\n\r\n  // }\r\n]\r\n\r\nfunction createGraph(n) {\r\n  const nodes = n * 3\r\n  const branches = 5 * n - 3\r\n  const string = new Array(branches)\r\n  string.fill(0)\r\n  let graph = new Array(nodes - 1)\r\n  graph.fill(string)\r\n  graph = graph.map((el, m) => {\r\n    return el.map((el2, i) => {\r\n      // Ток вытекает в узел справа\r\n      if (m <= n - 2 && i === m) return -1\r\n      if (m >= n && m <= 2 * n - 2 && i === m + n - 1) return -1\r\n      if (m >= 2 * n && m <= 3 * n - 2 && i === m + 2 * n - 2) return -1\r\n      // Ток втекает из узла слева\r\n      if (m >= 1 && m <= n - 1 && i === m - 1) return 1\r\n      if (m >= n + 1 && m <= 2 * n - 1 && i === m + n - 2) return 1\r\n      if (m >= 2 * n + 1 && m <= 3 * n - 1 && i === m + 2 * n - 3) return 1\r\n      // Ток вытекает в узел снизу\r\n      if (m >= 0 && m <= n - 1 && i === m + n - 1) return -1\r\n      if (m >= n && m <= 2 * n - 1 && i === m + 2 * n - 2) return -1\r\n      // Ток втекает из узла сверху\r\n      if (m >= n && m <= 2 * n - 1 && i === m - 1) return 1\r\n      if (m >= 2 * n && m <= 3 * n - 1 && i === m + n - 2) return 1\r\n      return 0\r\n    })\r\n  })\r\n  return graph\r\n}\r\n\r\nfunction createR(wb, wt, clampV, clampH, cont, n) {\r\n  const cb = cont / 2\r\n  const ct = cont / 2\r\n  const branches = 5 * n - 3\r\n  let R = new Array(branches)\r\n  R.fill(0)\r\n  R = R.map((el, i) => {\r\n    if (i <= n - 2) return wt / (n - 1)\r\n    if (i <= 2 * n - 1) return ct * n + (clampV * n) / 2\r\n    if (i <= 3 * n - 3) return clampH / (n - 1)\r\n    if (i <= 4 * n - 3) return cb * n + (clampV * n) / 2\r\n    if (i <= 5 * n - 4) return wb / (n - 1)\r\n    return 0\r\n  })\r\n  return R\r\n}\r\n\r\nfunction createICJ(n) {\r\n  const branches = 5 * n - 3\r\n  let string = new Array(branches)\r\n  string.fill(0)\r\n  string = string.map((el, i) => {\r\n    if (i === n - 1) return 1\r\n    if (i === 3 * n - 2) return 1\r\n    if (i >= 4 * n - 2) return 1\r\n    return 0\r\n  })\r\n  return string\r\n}\r\nfunction createILJ(n) {\r\n  const branches = 5 * n - 3\r\n  let string = new Array(branches)\r\n  string.fill(0)\r\n  string = string.map((el, i) => {\r\n    if (i >= 4 * n - 2) return 1\r\n    return 0\r\n  })\r\n  return string\r\n}\r\n\r\nexport default function createCircuit(obj) {\r\n  const n = parseInt(obj.n.value, 10)\r\n  const a = createGraph(n)\r\n  const iCJ = createICJ(n)\r\n  const iLJ = createILJ(n)\r\n  const argArr = [obj.Rwb, obj.Rwt, obj.Rv, obj.Rh, obj.Rc, obj.n].map(el =>\r\n    el.units === 'мкОм' ? el.value * 1e-6 : el.value * 1\r\n  )\r\n  const R = createR(...argArr)\r\n  return new Circuit(R, a, [iCJ, iLJ])\r\n}\r\n\r\nfunction createCircuitVH(obj, v, h, cont) {\r\n  const a = createGraph(obj.n.value)\r\n  const iCJ = createICJ(obj.n.value)\r\n  const iLJ = createILJ(obj.n.value)\r\n  const argArr = [\r\n    obj.Rwb,\r\n    obj.Rwt,\r\n    { name: 'Rv', value: v, units: 'мкОм' },\r\n    { name: 'Rh', value: h, units: 'мкОм' },\r\n    { name: 'Rc', value: cont, units: 'мкОм' },\r\n    obj.n,\r\n  ].map(el => (el.units === 'мкОм' ? el.value * 1e-6 : el.value))\r\n  const R = createR(...argArr)\r\n  return new Circuit(R, a, [iCJ, iLJ])\r\n}\r\n\r\nexport function NMSearchVH(obj, callback) {\r\n  function objFunc([v, h]) {\r\n    const rez = ref.reduce((acc, el, i, arr) => {\r\n      const c = createCircuitVH(obj, v, h, el.cont)\r\n      const strErr = el.value.reduce((acc2, el2, i2, arr2) => {\r\n        return (\r\n          acc2 +\r\n          Math.abs(c.Es([el2[0], el2[1]]) - el2[2]) / el2[2] / arr2.length\r\n        )\r\n      }, 0)\r\n      return acc + Math.abs(strErr) / arr.length\r\n    }, 0)\r\n    return rez\r\n  }\r\n  const s = new Simplex()\r\n  return s.solve(objFunc, [obj.Rv.value, obj.Rh.value], 150, callback)\r\n}\r\n","export default function initClampDE(t, iC, iL, hConv, c, obj) {\r\n  const delta = 5.670367e-8 // Постоянная Стефана — Больцмана\r\n  const alpha = obj.alpha.value //\r\n  const Tref = obj.Tref.value\r\n  const Fz = 0.012747731984462128 // Взято из геометрии\r\n  const Tair = t\r\n  const varEpsilon = 0.6\r\n  return function DE(x, y1 = [0]) {\r\n    const [y] = y1\r\n    const E = c.Es([iC(x), iL(x)]) * (1 + alpha * (Tair + y - Tref))\r\n\r\n    const Qconv = hConv(y + Tair) * Fz * y\r\n    const Qrad = varEpsilon * Fz * delta * ((y + Tair) ** 4 - Tair ** 4)\r\n    const Qtot = Qconv + Qrad\r\n\r\n    const rez = (E - Qtot) / 255.62151205326109\r\n    // console.log(\r\n    //     y,\r\n    //     E,\r\n    //     hConv( y + Tair ),\r\n    //     Qconv,\r\n    //     Qrad,\r\n    //     Qtot\r\n    // )\r\n    return [rez]\r\n  }\r\n}\r\n","/* eslint-disable no-console */\r\nimport odex from './odex'\r\nimport { convectionObj } from './hConv'\r\nimport createCircuit from './createCircuit'\r\nimport initClampDE from './createDE'\r\n\r\nfunction createI(load) {\r\n  let arr = load.values\r\n    .filter(el => el.t || el.i)\r\n    .map(el => {\r\n      return { t: parseFloat(el.t), i: parseFloat(el.i) }\r\n    })\r\n  if (load.option === 'const')\r\n    return function iConst() {\r\n      return arr[0].i\r\n    }\r\n  arr = arr.reverse()\r\n  if (load.option === 'step')\r\n    return function iStep(t) {\r\n      if (t >= arr[0].t) return arr[0].i\r\n      return arr.find(el => el.t <= t).i\r\n    }\r\n\r\n  if (load.option === 'linear')\r\n    return function iLinear(t) {\r\n      if (t >= arr[0].t) return arr[0].i\r\n      const ind = arr.findIndex(el => el.t <= t)\r\n      const i0 = arr[ind].i\r\n      const i1 = arr[ind - 1].i\r\n      const t0 = arr[ind].t\r\n      const t1 = arr[ind - 1].t\r\n      const i = i0 + ((t - t0) * (i1 - i0)) / (t1 - t0)\r\n      return i\r\n    }\r\n  return null\r\n}\r\n\r\nfunction solveDE({ thermal, resistance, task, loads }) {\r\n  // console.log(JSON.stringify(resistance))\r\n  const alpha = thermal.alpha.value\r\n  const Tair = thermal.Tair.value + 273.15\r\n  const Tref = thermal.Tref.value\r\n  const results = []\r\n  const iL = createI(loads[0])\r\n  const iC = createI(loads[1])\r\n  const hConv = convectionObj(thermal)\r\n  const c = createCircuit(resistance)\r\n  const f = initClampDE(Tair, iC, iL, hConv, c, thermal)\r\n  results[0] = { task, result: [] }\r\n  function collectValues(n, x0, x1, y) {\r\n    const collect = [\r\n      x1,\r\n      y[0],\r\n      c.Es([iC(x1), iL(x1)]) * (1 + alpha * (Tair + y[0] - Tref)),\r\n      iC(x1),\r\n      iL(x1),\r\n    ]\r\n    postMessage({ task, result: collect })\r\n\r\n    if (results[0].result.length === 0) {\r\n      results[0].result[0] = collect\r\n    } else if (\r\n      results[0].result[results[0].result.length - 1][0] !== collect[0]\r\n    ) {\r\n      results[0].result = [...results[0].result, collect]\r\n    }\r\n  }\r\n  const start = new Date()\r\n  const s = new odex.Solver(1)\r\n  s.absoluteTolerance = 1e-12\r\n  s.relativeTolerance = 1e-12\r\n  s.denseOutput = true\r\n  const {\r\n    xEnd: x0,\r\n    y: [y0],\r\n  } = s.solve(\r\n    f,\r\n    0,\r\n    [0],\r\n    task.tn.value,\r\n    s.grid(10, function collectResult(x1, y) {\r\n      collectValues(null, null, x1, y)\r\n    })\r\n  )\r\n  s.solve(\r\n    f,\r\n    x0,\r\n    y0,\r\n    task.tn.value + task.tn2.value,\r\n    s.grid(1, function collectResult(x1, y) {\r\n      collectValues(null, null, x1, y)\r\n    })\r\n  )\r\n  const end = new Date()\r\n  console.log('Время расчета:', end - start)\r\n  postMessage({ results: results[0], isDone: true })\r\n}\r\nonmessage = function onMessage(e) {\r\n  solveDE(e.data)\r\n}\r\n"],"names":["merge","rational","matrix","odex"],"mappings":"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"}